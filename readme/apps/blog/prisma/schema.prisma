// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id             Int @id @default(autoincrement())
  type           String
  createdAt      DateTime @default(now())
  publishAt      DateTime @default(now())
  comments       Comments[]
  videoPosts     Video_Post[]
  textPosts      Text_Post[]
  photoPosts     Photo_Post[]
  linkPosts      Link_Post[]
}

model Comments {
  id          Int @id @default(autoincrement())
  createdAt   DateTime @default(now())
  text        String
  userId      String
  postId      Int
  post        Post @relation(fields: [postId], references: [id])
}

model Video_Post {
 id             Int @id @default(autoincrement())
 title          String
 link           String
 tags           String
 createdAt      DateTime @default(now())
 publishAt      DateTime @default(now())
 userId         String
 status         String
//  comments       CommentsVideoPost[]
 post_id        Int
 post           Post @relation(fields: [post_id], references: [id])
}

// model CommentsVideoPost {
//   id          Int @id @default(autoincrement())
//   createdAt   DateTime @default(now())
//   text        String
//   userId      String
//   postId      Int
//   post        Video_Post @relation(fields: [postId], references: [id])
// }

model Text_Post {
 id             Int @id @default(autoincrement())
 title          String
 announceText   String
 text           String
 tags           String
 createdAt      DateTime @default(now())
 publishAt      DateTime @default(now())
 userId         String
 status         String
//  comments       CommentsTextPost[]
 post_id        Int
 post           Post @relation(fields: [post_id], references: [id])
}

// model CommentsTextPost {
//   id          Int @id @default(autoincrement())
//   createdAt   DateTime @default(now())
//   text        String
//   userId      String
//   postId      Int
//   post        Text_Post @relation(fields: [postId], references: [id])
// }

model Photo_Post {
 id             Int @id @default(autoincrement())
 photo          String
 tags           String
 createdAt      DateTime @default(now())
 publishAt      DateTime @default(now())
 userId         String
 status         String
//  comments       CommentsPhotoPost[]
 post_id        Int
 post           Post @relation(fields: [post_id], references: [id])
}

// model CommentsPhotoPost {
//   id          Int @id @default(autoincrement())
//   createdAt   DateTime @default(now())
//   text        String
//   userId      String
//   postId      Int
//   post        Photo_Post @relation(fields: [postId], references: [id])
// }

model Link_Post {
 id             Int @id @default(autoincrement())
 link           String
 description    String
 tags           String
 createdAt      DateTime @default(now())
 publishAt      DateTime @default(now())
 userId         String
 status         String
//  comments       CommentsLinkPost[]
 post_id        Int
 post           Post @relation(fields: [post_id], references: [id])
}

// model CommentsLinkPost {
//   id          Int @id @default(autoincrement())
//   createdAt   DateTime @default(now())
//   text        String
//   userId      String
//   postId      Int
//   post        Link_Post @relation(fields: [postId], references: [id])
// }



